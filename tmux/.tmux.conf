# ESC setting
set -s escape-time 0
# Prefix
unbind-key C-b
set -g prefix C-g
bind-key C-g send-prefix
set -g status-position top

# set utf-8 & reload
# setw -g utf8 on
# set -g status-utf8 on
bind r source-file ~/.tmux.conf \; display "Config reloaded."

# This tmux statusbar config was created by tmuxline.vim
# on Sat, 02 Sep 2017

set -g status-justify "left"
set -g status "on"
set -g status-attr "none"
set -g message-command-bg "colour81"
set -g status-left-length "100"
set -g pane-active-border-fg "colour239"
set -g status-bg "colour153"
set -g message-command-fg "colour235"
set -g pane-border-fg "colour81"
set -g message-bg "colour81"
set -g status-left-attr "none"
set -g status-right-attr "none"
set -g status-right-length "100"
set -g message-fg "colour235"
setw -g window-status-fg "colour66"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour153"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour239"
setw -g window-status-separator ""
setw -g window-status-bg "colour153"
set -g status-left "#[fg=colour153,bg=colour239] #S #[fg=colour239,bg=colour153,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour81,bg=colour153,nobold,nounderscore,noitalics]#[fg=colour235,bg=colour81] %Y-%m-%d  %H:%M #[fg=colour239,bg=colour81,nobold,nounderscore,noitalics] battery:#($HOME/.tmux/bin/battery --tmux)#[fg=colour239,bg=colour81,nobold,nounderscore,noitalics]  #($HOME/.tmux/bin/wifi)#[fg=colour239,bg=colour81,nobold,nounderscore,noitalics]#[fg=colour153,bg=colour239] #h "
setw -g window-status-format "#[fg=colour66,bg=colour153] #I #[fg=colour66,bg=colour153] #W "
setw -g window-status-current-format "#[fg=colour153,bg=colour81,nobold,nounderscore,noitalics]#[fg=colour235,bg=colour81] #I #[fg=colour235,bg=colour81] #W #[fg=colour81,bg=colour153,nobold,nounderscore,noitalics]"

set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'
set-option -g renumber-windows on

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize pane
bind -r C-h resize-pane -L 3
bind -r C-j resize-pane -D 3
bind -r C-k resize-pane -U 3
bind -r C-l resize-pane -R 3

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

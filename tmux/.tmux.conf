# ESC setting
set -s escape-time 0
# Prefix
unbind-key C-b
set -g prefix C-g
bind-key C-g send-prefix
set -g status-position top

# set utf-8 & reload
# setw -g utf8 on
# set -g status-utf8 on
bind r source-file ~/.tmux.conf \; display "Config reloaded."

# This tmux statusbar config was created by tmuxline.vim  {{{
# on Mon, 26 Nov 2018
set -g status-justify "left"
set -g status "on"
set -g status-attr "none"
set -g message-command-bg "#212026"
set -g status-left-length "100"
set -g pane-active-border-fg "#5d4d7a"
set -g status-bg "#5d4d7a"
set -g message-command-fg "#68727c"
set -g pane-border-fg "#212026"
set -g message-bg "#212026"
set -g status-left-attr "none"
set -g status-right-attr "none"
set -g status-right-length "100"
set -g message-fg "#68727c"
setw -g window-status-fg "#b2b2b2"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "#5d4d7a"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "#b2b2b2"
setw -g window-status-separator ""
setw -g window-status-bg "#5d4d7a"
set -g status-left "#[fg=#b2b2b2,bg=#5d4d7a] #S #[fg=#5d4d7a,bg=#5d4d7a,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#5d4d7a,bg=#5d4d7a,nobold,nounderscore,noitalics]#[fg=#b2b2b2,bg=#5d4d7a] %Y-%m-%d  %H:%M #[fg=#5d4d7a,bg=#5d4d7a,nobold,nounderscore,noitalics]#[fg=#b2b2b2,bg=#5d4d7a] #h "
setw -g window-status-format "#[fg=#b2b2b2,bg=#5d4d7a] #I #[fg=#b2b2b2,bg=#5d4d7a] #W "
setw -g window-status-current-format "#[fg=#5d4d7a,bg=#212026,nobold,nounderscore,noitalics]#[fg=#68727c,bg=#212026] #I #[fg=#68727c,bg=#212026] #W #[fg=#212026,bg=#5d4d7a,nobold,nounderscore,noitalics]"
# }}}

set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'
set-option -g renumber-windows on

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize pane
bind -r C-h resize-pane -L 3
bind -r C-j resize-pane -D 3
bind -r C-k resize-pane -U 3
bind -r C-l resize-pane -R 3

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

set-option -g default-command "reattach-to-user-namespace -l zsh"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

